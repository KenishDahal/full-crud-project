[{"/Users/kenishdahal/react/src/index.js":"1","/Users/kenishdahal/react/src/pages/Customers.js":"2","/Users/kenishdahal/react/src/pages/Customer.js":"3","/Users/kenishdahal/react/src/pages/Employees.js":"4","/Users/kenishdahal/react/src/components/NotFound.js":"5","/Users/kenishdahal/react/src/components/Header.js":"6","/Users/kenishdahal/react/src/components/Employee.js":"7","/Users/kenishdahal/react/src/components/AddEmployee.js":"8","/Users/kenishdahal/react/src/components/EditEmployee.js":"9","/Users/kenishdahal/react/src/components/AddCustomer.js":"10","/Users/kenishdahal/react/src/hooks/UseFetch.js":"11","/Users/kenishdahal/react/src/pages/Register.jsx":"12","/Users/kenishdahal/react/src/pages/Login.jsx":"13","/Users/kenishdahal/react/src/App.jsx":"14","/Users/kenishdahal/react/src/shared.js":"15","/Users/kenishdahal/react/src/pages/Definition.js":"16","/Users/kenishdahal/react/src/pages/Dictionary.js":"17","/Users/kenishdahal/react/src/components/DefinitionSearch.js":"18"},{"size":287,"mtime":1704472958112,"results":"19","hashOfConfig":"20"},{"size":1866,"mtime":1716110259604,"results":"21","hashOfConfig":"20"},{"size":9419,"mtime":1704971228347,"results":"22","hashOfConfig":"20"},{"size":3470,"mtime":1704472958113,"results":"23","hashOfConfig":"20"},{"size":101,"mtime":1704472958112,"results":"24","hashOfConfig":"20"},{"size":9303,"mtime":1704961438659,"results":"25","hashOfConfig":"20"},{"size":900,"mtime":1704472958112,"results":"26","hashOfConfig":"20"},{"size":5964,"mtime":1704472958112,"results":"27","hashOfConfig":"20"},{"size":4580,"mtime":1704472958112,"results":"28","hashOfConfig":"20"},{"size":4594,"mtime":1704966106851,"results":"29","hashOfConfig":"20"},{"size":2146,"mtime":1704472958112,"results":"30","hashOfConfig":"20"},{"size":4759,"mtime":1716109888890,"results":"31","hashOfConfig":"20"},{"size":2256,"mtime":1716110018198,"results":"32","hashOfConfig":"20"},{"size":1931,"mtime":1716110201859,"results":"33","hashOfConfig":"20"},{"size":64,"mtime":1716110224233,"results":"34","hashOfConfig":"20"},{"size":1852,"mtime":1716110220957,"results":"35","hashOfConfig":"20"},{"size":219,"mtime":1716110220749,"results":"36","hashOfConfig":"20"},{"size":891,"mtime":1716110221138,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"15y2344",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"41"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"41"},"/Users/kenishdahal/react/src/index.js",[],[],[],"/Users/kenishdahal/react/src/pages/Customers.js",["103","104","105","106","107"],[],"/Users/kenishdahal/react/src/pages/Customer.js",["108","109","110","111"],[],"import { useParams, Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useEffect, useState, useContext } from 'react';\nimport NotFound from '../components/NotFound';\nimport { baseUrl } from '../shared';\nimport { LoginContext } from '../App';\n\nexport default function Customer() {\n    const [loggedIn, setLoggedIn] = useContext(LoginContext);\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const [customer, setCustomer] = useState();\n    const [tempCustomer, setTempCustomer] = useState();\n    const [notFound, setNotFound] = useState();\n    const [changed, setChanged] = useState(false);\n    const [error, setError] = useState();\n\n    const location = useLocation();\n\n    useEffect(() => {\n        if (!customer) return;\n        if (!customer) return;\n\n        let equal = true;\n        if (customer.name !== tempCustomer.name) equal = false;\n        if (customer.industry !== tempCustomer.industry) equal = false;\n\n        if (equal) setChanged(false);\n    });\n\n    useEffect(() => {\n        const url = baseUrl + 'api/customers/' + id;\n        fetch(url, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + localStorage.getItem('access'),\n            },\n        })\n            .then((response) => {\n                if (response.status === 404) {\n                    //render a 404 component in this page\n                    setNotFound(true);\n                } else if (response.status === 401) {\n                    setLoggedIn(false);\n                    navigate('/login', {\n                        state: {\n                            previousUrl: location.pathname,\n                        },\n                    });\n                }\n\n                if (!response.ok) {\n                    throw new Error('Something went wrong, try again later');\n                }\n\n                return response.json();\n            })\n            .then((data) => {\n                setCustomer(data.customer);\n                setTempCustomer(data.customer);\n                setError(undefined);\n            })\n            .catch((e) => {\n                setError(e.message);\n            });\n    }, []);\n\n    function updateCustomer(e) {\n        e.preventDefault();\n        const url = baseUrl + 'api/customers/' + id;\n        fetch(url, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + localStorage.getItem('access'),\n            },\n            body: JSON.stringify(tempCustomer),\n        })\n            .then((response) => {\n                if (response.status === 401) {\n                    setLoggedIn(false);\n                    navigate('/login', {\n                        state: {\n                            previousUrl: location.pathname,\n                        },\n                    });\n                }\n                if (!response.ok) throw new Error('something went wrong');\n                return response.json();\n            })\n            .then((data) => {\n                setCustomer(data.customer);\n                setChanged(false);\n                setError(undefined);\n            })\n            .catch((e) => {\n                setError(e.message);\n            });\n    }\n\n    return (\n        <div class=\"p-3\">\n            {notFound ? <p>The customer with id {id} was not found</p> : null}\n\n            {customer ? (\n                <div>\n                    <form\n                        className=\"w-full max-w-sm\"\n                        id=\"customer\"\n                        onSubmit={updateCustomer}\n                    >\n                        <div className=\"md:flex md:items-center mb-6\">\n                            <div className=\"md:w-1/4\">\n                                <label for=\"name\">Name</label>\n                            </div>\n\n                            <div className=\"md:w-3/4\">\n                                <input\n                                    className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                                    id=\"name\"\n                                    type=\"text\"\n                                    value={tempCustomer.name}\n                                    onChange={(e) => {\n                                        setChanged(true);\n                                        setTempCustomer({\n                                            ...tempCustomer,\n                                            name: e.target.value,\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"md:flex md:items-center mb-6\">\n                            <div className=\"md:w-1/4\">\n                                <label for=\"industry\">Industry</label>\n                            </div>\n\n                            <div className=\"md:w-3/4\">\n                                <input\n                                    id=\"industry\"\n                                    className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                                    type=\"text\"\n                                    value={tempCustomer.industry}\n                                    onChange={(e) => {\n                                        setChanged(true);\n                                        setTempCustomer({\n                                            ...tempCustomer,\n                                            industry: e.target.value,\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </form>\n                    {changed ? (\n                        <div className=\"mb-2\">\n                            <button\n                                className=\"bg-slate-400 hover:bg-slate-500 text-white font-bold py-2 px-4 mr-2 rounded\"\n                                onClick={(e) => {\n                                    setTempCustomer({ ...customer });\n                                    setChanged(false);\n                                }}\n                            >\n                                Cancel\n                            </button>\n                            <button\n                                form=\"customer\"\n                                className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\"\n                            >\n                                Save\n                            </button>\n                        </div>\n                    ) : null}\n\n                    <div>\n                        <button\n                            className=\"bg-slate-800 hover:bg-slate-500 text-white font-bold py-2 px-4 rounded\"\n                            onClick={(e) => {\n                                const url = baseUrl + 'api/customers/' + id;\n                                fetch(url, {\n                                    method: 'DELETE',\n                                    headers: {\n                                        'Content-Type': 'application/json',\n                                        Authorization:\n                                            'Bearer ' +\n                                            localStorage.getItem('access'),\n                                    },\n                                })\n                                    .then((response) => {\n                                        if (response.status === 401) {\n                                            setLoggedIn(false);\n                                            navigate('/login', {\n                                                state: {\n                                                    previousUrl:\n                                                        location.pathname,\n                                                },\n                                            });\n                                        }\n                                        if (!response.ok) {\n                                            throw new Error(\n                                                'Something went wrong'\n                                            );\n                                        }\n                                        navigate('/customers');\n                                    })\n                                    .catch((e) => {\n                                        setError(e.message);\n                                    });\n                            }}\n                        >\n                            Delete\n                        </button>\n                    </div>\n                </div>\n            ) : null}\n\n            {error ? <p>{error}</p> : null}\n            <br />\n            <Link to=\"/customers\">\n                <button className=\"no-underline bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\">\n                    ← Go back\n                </button>\n            </Link>\n        </div>\n    );\n}\n","/Users/kenishdahal/react/src/pages/Employees.js",["112","113"],[],"import '../index.css';\nimport Employee from '../components/Employee';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport AddEmployee from '../components/AddEmployee';\nimport EditEmployee from '../components/EditEmployee';\nimport Header from '../components/Header';\n\nfunction Employees() {\n    const [employees, setEmployees] = useState([\n        {\n            id: 1,\n            name: 'Caleb',\n            role: 'YouTube Sensation',\n            img: 'https://images.pexels.com/photos/3831645/pexels-photo-3831645.jpeg',\n        },\n        {\n            id: 2,\n            name: 'Sal',\n            role: 'Manager',\n            img: 'https://images.pexels.com/photos/3586798/pexels-photo-3586798.jpeg',\n        },\n        {\n            id: 3,\n            name: 'John',\n            role: 'Director of Eng.',\n            img: 'https://images.pexels.com/photos/2095582/pexels-photo-2095582.jpeg',\n        },\n        {\n            id: 4,\n            name: 'Melanie',\n            role: 'Software Engineer',\n            img: 'https://images.pexels.com/photos/3760583/pexels-photo-3760583.jpeg',\n        },\n        {\n            id: 5,\n            name: 'Corey',\n            role: 'The Devops Guy',\n            img: 'https://images.pexels.com/photos/2379005/pexels-photo-2379005.jpeg',\n        },\n        {\n            id: 6,\n            name: 'Jake',\n            role: 'Senior',\n            img: 'https://images.pexels.com/photos/2225298/pexels-photo-2225298.jpeg',\n        },\n    ]);\n\n    function updateEmployee(id, newName, newRole) {\n        const updatedEmployees = employees.map((employee) => {\n            if (id == employee.id) {\n                return { ...employee, name: newName, role: newRole };\n            }\n\n            return employee;\n        });\n        setEmployees(updatedEmployees);\n    }\n\n    function newEmployee(name, role, img) {\n        const newEmployee = {\n            id: uuidv4(),\n            name: name,\n            role: role,\n            img: img,\n        };\n        setEmployees([...employees, newEmployee]);\n    }\n\n    const showEmployees = true;\n    return (\n        <div className=\"\">\n            {showEmployees ? (\n                <>\n                    <div className=\"flex flex-wrap justify-center\">\n                        {employees.map((employee) => {\n                            const editEmployee = (\n                                <EditEmployee\n                                    id={employee.id}\n                                    name={employee.name}\n                                    role={employee.role}\n                                    updateEmployee={updateEmployee}\n                                />\n                            );\n                            return (\n                                <Employee\n                                    key={employee.id}\n                                    id={employee.id}\n                                    name={employee.name}\n                                    role={employee.role}\n                                    img={employee.img}\n                                    editEmployee={editEmployee}\n                                />\n                            );\n                        })}\n                    </div>\n                    <AddEmployee newEmployee={newEmployee} />\n                </>\n            ) : (\n                <p>You cannot see the employees</p>\n            )}\n        </div>\n    );\n}\n\nexport default Employees;\n","/Users/kenishdahal/react/src/components/NotFound.js",[],[],"/Users/kenishdahal/react/src/components/Header.js",["114","115","116","117"],[],"/* This example requires Tailwind CSS v2.0+ */\nimport { useContext, useEffect } from 'react';\nimport { Disclosure, Menu, Transition } from '@headlessui/react';\nimport { BellIcon, MenuIcon, XIcon } from '@heroicons/react/outline';\nimport { NavLink } from 'react-router-dom';\nimport { LoginContext } from '../App';\n\nconst navigation = [\n    { name: 'Employees', href: '/Employees' },\n    { name: 'Customers', href: '/Customers' },\n    { name: 'Dictionary', href: '/dictionary' },\n];\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ');\n}\n\nexport default function Header(props) {\n    const [loggedIn, setLoggedIn] = useContext(LoginContext);\n\n    return (\n        <>\n            <Disclosure as=\"nav\" className=\"bg-black\">\n                {({ open }) => (\n                    <>\n                        <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n                            <div className=\"relative flex items-center justify-between h-14\">\n                                <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                                    {/* Mobile menu button*/}\n                                    <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n                                        <span className=\"sr-only\">\n                                            Open main menu\n                                        </span>\n                                        {open ? (\n                                            <XIcon\n                                                className=\"block h-6 w-6\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        ) : (\n                                            <MenuIcon\n                                                className=\"block h-6 w-6\"\n                                                aria-hidden=\"true\"\n                                            />\n                                        )}\n                                    </Disclosure.Button>\n                                </div>\n                                <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                                    <div className=\"hidden sm:block sm:ml-6\">\n                                        <div className=\"flex space-x-4\">\n                                            {/*className={classNames(\n                                                    item.current\n                                                        ? 'no-underline '\n                                                        : 'no-underline',\n                                                    ''\n                                                )}*/}\n                                            {navigation.map((item) => (\n                                                <NavLink\n                                                    key={item.name}\n                                                    to={item.href}\n                                                    className={({\n                                                        isActive,\n                                                    }) => {\n                                                        return (\n                                                            'px-3 py-2 rounded-md text-sm font-medium no-underline ' +\n                                                            (!isActive\n                                                                ? ' text-gray-300 hover:bg-gray-700 hover:text-white'\n                                                                : 'bg-gray-900 text-white')\n                                                        );\n                                                    }}\n                                                >\n                                                    {item.name}\n                                                </NavLink>\n                                            ))}\n                                            {loggedIn ? (\n                                                <NavLink\n                                                    to={'/login'}\n                                                    onClick={() => {\n                                                        setLoggedIn(false);\n                                                        localStorage.clear();\n                                                    }}\n                                                    className=\"px-3 py-2 rounded-md text-sm font-medium no-underline text-gray-300 hover:bg-gray-700 hover:text-white\"\n                                                >\n                                                    Logout\n                                                </NavLink>\n                                            ) : (\n                                                <NavLink\n                                                    to={'/login'}\n                                                    className=\"px-3 py-2 rounded-md text-sm font-medium no-underline text-gray-300 hover:bg-gray-700 hover:text-white\"\n                                                >\n                                                    Login\n                                                </NavLink>\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\"\n                                    >\n                                        <span className=\"sr-only\">\n                                            View notifications\n                                        </span>\n                                        <BellIcon\n                                            className=\"h-6 w-6\"\n                                            aria-hidden=\"true\"\n                                        />\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Disclosure.Panel className=\"sm:hidden\">\n                            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n                                {navigation.map((item) => (\n                                    <NavLink\n                                        key={item.name}\n                                        to={item.href}\n                                        className={({ isActive }) => {\n                                            return (\n                                                'block px-3 py-2 rounded-md text-base font-medium no-underline ' +\n                                                (!isActive\n                                                    ? ' text-gray-300 hover:bg-gray-700 hover:text-white'\n                                                    : 'bg-gray-900 text-white')\n                                            );\n                                        }}\n                                    >\n                                        {item.name}\n                                    </NavLink>\n                                ))}\n                                {loggedIn ? (\n                                    <NavLink\n                                        to={'/login'}\n                                        onClick={() => {\n                                            setLoggedIn(false);\n                                            localStorage.clear();\n                                        }}\n                                        className=\"block px-3 py-2 rounded-md text-base font-medium no-underline text-gray-300 hover:bg-gray-700 hover:text-white\"\n                                    >\n                                        Logout\n                                    </NavLink>\n                                ) : (\n                                    <NavLink\n                                        to={'/login'}\n                                        className=\"block px-3 py-2 rounded-md text-base font-medium no-underline text-gray-300 hover:bg-gray-700 hover:text-white\"\n                                    >\n                                        Login\n                                    </NavLink>\n                                )}\n                            </div>\n                        </Disclosure.Panel>\n                    </>\n                )}\n            </Disclosure>\n            <div className=\"bg-white\">\n                <div className=\"max-w-7xl mx-auto min-h-screen px-3 py-2\">\n                    {props.children}\n                </div>\n            </div>\n        </>\n    );\n}\n","/Users/kenishdahal/react/src/components/Employee.js",["118","119"],[],"import EditEmployee from './EditEmployee';\n\nfunction Employee(props) {\n    return (\n        <div className=\"min-w-[350px] max-w-[350px] m-2 py-8 px-8 max-w-sm bg-white rounded-xl shadow-lg space-y-2 sm:py-4 sm:flex sm:items-center sm:space-y-0 sm:space-x-6\">\n            <img\n                className=\"object-cover rounded-full h-[100px] w-[100px] block mx-auto h-24 rounded-full sm:mx-0 sm:shrink-0\"\n                src={props.img}\n            />\n            <div className=\"text-center space-y-2 sm:text-left\">\n                <div className=\"space-y-0.5\">\n                    <p className=\"text-lg text-black font-semibold\">\n                        {props.name}\n                    </p>\n                    <p className=\"text-slate-500 font-medium\">{props.role}</p>\n                </div>\n\n                {props.editEmployee}\n            </div>\n        </div>\n    );\n}\n\nexport default Employee;\n","/Users/kenishdahal/react/src/components/AddEmployee.js",["120"],[],"import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction AddEmployee(props) {\n    const [name, setName] = useState('');\n    const [role, setRole] = useState('');\n    const [img, setImg] = useState('');\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <button\n                onClick={handleShow}\n                className=\"block mx-auto m-2 bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\"\n            >\n                + Add Employee\n            </button>\n\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Employee</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form\n                        onSubmit={(e) => {\n                            e.preventDefault();\n                            setName('');\n                            setRole('');\n                            setImg('');\n                            props.newEmployee(name, role, img);\n                        }}\n                        id=\"editmodal\"\n                        className=\"w-full max-w-sm\"\n                    >\n                        <div className=\"md:flex md:items-center mb-6\">\n                            <div className=\"md:w-1/3\">\n                                <label\n                                    className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\"\n                                    for=\"name\"\n                                >\n                                    Full Name\n                                </label>\n                            </div>\n                            <div className=\"md:w-2/3\">\n                                <input\n                                    className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                                    id=\"name\"\n                                    placeholder=\"John Smith\"\n                                    type=\"text\"\n                                    value={name}\n                                    onChange={(e) => {\n                                        setName(e.target.value);\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"md:flex md:items-center mb-6\">\n                            <div className=\"md:w-1/3\">\n                                <label\n                                    className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\"\n                                    for=\"role\"\n                                >\n                                    Role\n                                </label>\n                            </div>\n                            <div className=\"md:w-2/3\">\n                                <input\n                                    className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                                    id=\"role\"\n                                    placeholder=\"Bank Teller\"\n                                    type=\"text\"\n                                    value={role}\n                                    onChange={(e) => {\n                                        setRole(e.target.value);\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"md:flex md:items-center mb-6\">\n                            <div className=\"md:w-1/3\">\n                                <label\n                                    className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\"\n                                    for=\"img\"\n                                >\n                                    Image URL\n                                </label>\n                            </div>\n                            <div className=\"md:w-2/3\">\n                                <input\n                                    className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                                    id=\"img\"\n                                    placeholder=\"https://google.com\"\n                                    type=\"text\"\n                                    value={img}\n                                    onChange={(e) => {\n                                        setImg(e.target.value);\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        className=\"bg-slate-400 hover:bg-slate-500 text-white font-bold py-2 px-4 rounded\"\n                        onClick={handleClose}\n                    >\n                        Close\n                    </button>\n                    <button\n                        className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\"\n                        onClick={handleClose}\n                        form=\"editmodal\"\n                    >\n                        Add\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default AddEmployee;\n","/Users/kenishdahal/react/src/components/EditEmployee.js",["121"],[],"import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction EditEmployee(props) {\n    const [name, setName] = useState(props.name);\n    const [role, setRole] = useState(props.role);\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <button\n                onClick={handleShow}\n                className=\"px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\"\n            >\n                Update\n            </button>\n\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Update Employee</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form\n                        onSubmit={(e) => {\n                            handleClose();\n                            e.preventDefault();\n                            props.updateEmployee(props.id, name, role);\n                        }}\n                        id=\"editmodal\"\n                        className=\"w-full max-w-sm\"\n                    >\n                        <div className=\"md:flex md:items-center mb-6\">\n                            <div className=\"md:w-1/3\">\n                                <label\n                                    className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\"\n                                    for=\"name\"\n                                >\n                                    Full Name\n                                </label>\n                            </div>\n                            <div className=\"md:w-2/3\">\n                                <input\n                                    className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                                    id=\"name\"\n                                    type=\"text\"\n                                    value={name}\n                                    onChange={(e) => {\n                                        setName(e.target.value);\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"md:flex md:items-center mb-6\">\n                            <div className=\"md:w-1/3\">\n                                <label\n                                    className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\"\n                                    for=\"role\"\n                                >\n                                    Role\n                                </label>\n                            </div>\n                            <div className=\"md:w-2/3\">\n                                <input\n                                    className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                                    id=\"role\"\n                                    type=\"text\"\n                                    value={role}\n                                    onChange={(e) => {\n                                        setRole(e.target.value);\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        className=\"bg-slate-400 hover:bg-slate-500 text-white font-bold py-2 px-4 rounded\"\n                        onClick={handleClose}\n                    >\n                        Close\n                    </button>\n                    <button\n                        className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\"\n                        form=\"editmodal\"\n                    >\n                        Update\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default EditEmployee;\n","/Users/kenishdahal/react/src/components/AddCustomer.js",["122","123","124"],[],"import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nexport default function AddCustomer(props) {\n    const [name, setName] = useState('');\n    const [industry, setIndustry] = useState('');\n    const [show, setShow] = useState(props.show);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <button\n                onClick={props.toggleShow}\n                className=\"block m-2 bg-black hover:bg-black text-white font-bold py-2 px-4 rounded\"\n            >\n                Add Customer\n            </button>\n\n            <Modal\n                show={props.show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Customer</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form\n                        onSubmit={(e) => {\n                            e.preventDefault();\n                            setName('');\n                            setIndustry('');\n                            props.newCustomer(name, industry);\n                        }}\n                        id=\"editmodal\"\n                        className=\"w-full max-w-sm\"\n                    >\n                        <div className=\"md:flex md:items-center mb-6\">\n                            <div className=\"md:w-1/3\">\n                                <label\n                                    className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\"\n                                    for=\"name\"\n                                >\n                                    Name\n                                </label>\n                            </div>\n                            <div className=\"md:w-2/3\">\n                                <input\n                                    className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                                    id=\"name\"\n                                    placeholder=\"Google\"\n                                    type=\"text\"\n                                    value={name}\n                                    onChange={(e) => {\n                                        setName(e.target.value);\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"md:flex md:items-center mb-6\">\n                            <div className=\"md:w-1/3\">\n                                <label\n                                    className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\"\n                                    for=\"industry\"\n                                >\n                                    Industry\n                                </label>\n                            </div>\n                            <div className=\"md:w-2/3\">\n                                <input\n                                    className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                                    id=\"industry\"\n                                    placeholder=\"Computing\"\n                                    type=\"text\"\n                                    value={industry}\n                                    onChange={(e) => {\n                                        setIndustry(e.target.value);\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        className=\"bg-slate-400 hover:bg-slate-500 text-white font-bold py-2 px-4 rounded\"\n                        onClick={props.toggleShow}\n                    >\n                        Close\n                    </button>\n                    <button\n                        className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\"\n                        form=\"editmodal\"\n                    >\n                        Add\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n","/Users/kenishdahal/react/src/hooks/UseFetch.js",["125"],[],"import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nexport default function useFetch(url, { method, headers, body } = {}) {\n    const [data, setData] = useState();\n    const [errorStatus, setErrorStatus] = useState();\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    function request() {\n        fetch(url, {\n            method: method,\n            headers: headers,\n            body: body,\n        })\n            .then((response) => {\n                if (response.status === 401) {\n                    navigate('/login', {\n                        state: {\n                            previousUrl: location.pathname,\n                        },\n                    });\n                }\n                if (!response.ok) {\n                    throw response.status;\n                }\n                return response.json();\n            })\n            .then((data) => {\n                setData(data);\n            })\n            .catch((e) => {\n                setErrorStatus(e);\n            });\n    }\n\n    function appendData(newData) {\n        fetch(url, {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(newData),\n        })\n            .then((response) => {\n                if (response.status === 401) {\n                    navigate('/login', {\n                        state: {\n                            previousUrl: location.pathname,\n                        },\n                    });\n                }\n\n                if (!response.ok) {\n                    throw response.status;\n                }\n\n                return response.json();\n            })\n            .then((d) => {\n                const submitted = Object.values(d)[0];\n\n                const newState = { ...data };\n                Object.values(newState)[0].push(submitted);\n\n                setData(newState); //new object, it's seen as a state change\n            })\n            .catch((e) => {\n                console.log(e);\n                setErrorStatus(e);\n            });\n    }\n\n    return { request, appendData, data, errorStatus };\n}\n","/Users/kenishdahal/react/src/pages/Register.jsx",["126","127","128","129","130"],[],"/Users/kenishdahal/react/src/pages/Login.jsx",["131","132","133","134","135","136"],[],"/Users/kenishdahal/react/src/App.jsx",["137"],[],"/Users/kenishdahal/react/src/shared.js",[],[],"/Users/kenishdahal/react/src/pages/Definition.js",["138","139","140","141"],[],"import { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link, useLocation } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport DefinitionSearch from '../components/DefinitionSearch';\nimport NotFound from '../components/NotFound';\nimport useFetch from '../hooks/UseFetch';\n\nexport default function Definition() {\n    //const [word, setWord] = useState();\n    //const [notFound, setNotFound] = useState(false);\n    //const [error, setError] = useState(false);\n    let { search } = useParams();\n\n    const location = useLocation();\n    const navigate = useNavigate();\n    const {\n        request,\n        data: [{ meanings: word }] = [{}],\n        errorStatus,\n    } = useFetch('https://api.dictionaryapi.dev/api/v2/entries/en/' + search);\n\n    useEffect(() => {\n        request();\n    }, [search]);\n\n    if (errorStatus === 404) {\n        return (\n            <>\n                <NotFound />\n                <Link to=\"/dictionary\">Search another</Link>\n            </>\n        );\n    }\n\n    if (errorStatus) {\n        return (\n            <>\n                <p>There was a problem with the server, try again later.</p>\n                <Link to=\"/dictionary\">Search another</Link>\n            </>\n        );\n    }\n\n    return (\n        <>\n            {word ? (\n                <>\n                    <h1>Here is a definition:</h1>\n                    {word.map((meaning) => {\n                        return (\n                            <p key={uuidv4()}>\n                                {meaning.partOfSpeech + ': '}\n                                {meaning.definitions[0].definition}\n                            </p>\n                        );\n                    })}\n                    <p>Search again:</p>\n                    <DefinitionSearch />\n                </>\n            ) : null}\n        </>\n    );\n}\n","/Users/kenishdahal/react/src/pages/Dictionary.js",[],[],"/Users/kenishdahal/react/src/components/DefinitionSearch.js",["142"],[],"import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function DefinitionSearch() {\n    const [word, setWord] = useState('');\n    const navigate = useNavigate();\n\n    return (\n        <form\n            className=\"flex space-between space-x-2 max-w-[300px]\"\n            onSubmit={(e) => {\n                e.preventDefault();\n                navigate('/dictionary/' + word);\n            }}\n        >\n            <input\n                className=\"shrink min-w-0 px-2 py-1 rounded\"\n                placeholder=\"Dinosaur\"\n                type=\"text\"\n                onChange={(e) => {\n                    setWord(e.target.value);\n                }}\n            />\n            <button className=\" bg-purple-600 hover:bg-purple-700 text-white font-bold py-1 px-2 rounded\">\n                Search\n            </button>\n        </form>\n    );\n}\n",{"ruleId":"143","severity":1,"message":"144","line":2,"column":29,"nodeType":"145","messageId":"146","endLine":2,"endColumn":40},{"ruleId":"143","severity":1,"message":"147","line":9,"column":10,"nodeType":"145","messageId":"146","endLine":9,"endColumn":18},{"ruleId":"143","severity":1,"message":"148","line":9,"column":20,"nodeType":"145","messageId":"146","endLine":9,"endColumn":31},{"ruleId":"143","severity":1,"message":"149","line":17,"column":9,"nodeType":"145","messageId":"146","endLine":17,"endColumn":17},{"ruleId":"150","severity":1,"message":"151","line":35,"column":6,"nodeType":"152","endLine":35,"endColumn":8,"suggestions":"153"},{"ruleId":"143","severity":1,"message":"154","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":16},{"ruleId":"143","severity":1,"message":"147","line":8,"column":12,"nodeType":"145","messageId":"146","endLine":8,"endColumn":20},{"ruleId":"150","severity":1,"message":"155","line":19,"column":5,"nodeType":"145","endLine":19,"endColumn":14,"suggestions":"156"},{"ruleId":"150","severity":1,"message":"157","line":66,"column":8,"nodeType":"152","endLine":66,"endColumn":10,"suggestions":"158"},{"ruleId":"143","severity":1,"message":"159","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":14},{"ruleId":"160","severity":1,"message":"161","line":51,"column":20,"nodeType":"162","messageId":"163","endLine":51,"endColumn":22},{"ruleId":"143","severity":1,"message":"164","line":2,"column":22,"nodeType":"145","messageId":"146","endLine":2,"endColumn":31},{"ruleId":"143","severity":1,"message":"165","line":3,"column":22,"nodeType":"145","messageId":"146","endLine":3,"endColumn":26},{"ruleId":"143","severity":1,"message":"166","line":3,"column":28,"nodeType":"145","messageId":"146","endLine":3,"endColumn":38},{"ruleId":"143","severity":1,"message":"167","line":14,"column":10,"nodeType":"145","messageId":"146","endLine":14,"endColumn":20},{"ruleId":"143","severity":1,"message":"168","line":1,"column":8,"nodeType":"145","messageId":"146","endLine":1,"endColumn":20},{"ruleId":"169","severity":1,"message":"170","line":6,"column":13,"nodeType":"171","endLine":9,"endColumn":15},{"ruleId":"143","severity":1,"message":"172","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"172","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"172","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"173","line":8,"column":12,"nodeType":"145","messageId":"146","endLine":8,"endColumn":16},{"ruleId":"143","severity":1,"message":"174","line":11,"column":11,"nodeType":"145","messageId":"146","endLine":11,"endColumn":21},{"ruleId":"143","severity":1,"message":"164","line":1,"column":20,"nodeType":"145","messageId":"146","endLine":1,"endColumn":29},{"ruleId":"143","severity":1,"message":"164","line":1,"column":20,"nodeType":"145","messageId":"146","endLine":1,"endColumn":29},{"ruleId":"143","severity":1,"message":"175","line":1,"column":31,"nodeType":"145","messageId":"146","endLine":1,"endColumn":41},{"ruleId":"143","severity":1,"message":"176","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"144","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":21},{"ruleId":"143","severity":1,"message":"177","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":22},{"ruleId":"143","severity":1,"message":"164","line":1,"column":20,"nodeType":"145","messageId":"146","endLine":1,"endColumn":29},{"ruleId":"143","severity":1,"message":"175","line":1,"column":31,"nodeType":"145","messageId":"146","endLine":1,"endColumn":41},{"ruleId":"143","severity":1,"message":"176","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"144","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":21},{"ruleId":"143","severity":1,"message":"178","line":3,"column":23,"nodeType":"145","messageId":"146","endLine":3,"endColumn":34},{"ruleId":"143","severity":1,"message":"177","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":22},{"ruleId":"143","severity":1,"message":"164","line":2,"column":35,"nodeType":"145","messageId":"146","endLine":2,"endColumn":44},{"ruleId":"143","severity":1,"message":"179","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":18},{"ruleId":"143","severity":1,"message":"180","line":14,"column":11,"nodeType":"145","messageId":"146","endLine":14,"endColumn":19},{"ruleId":"143","severity":1,"message":"149","line":15,"column":11,"nodeType":"145","messageId":"146","endLine":15,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":24,"column":8,"nodeType":"152","endLine":24,"endColumn":16,"suggestions":"181"},{"ruleId":"143","severity":1,"message":"164","line":1,"column":20,"nodeType":"145","messageId":"146","endLine":1,"endColumn":29},"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'request'. Either include it or remove the dependency array.","ArrayExpression",["182"],"'NotFound' is defined but never used.","React Hook useEffect contains a call to 'setChanged'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [customer, tempCustomer.name, tempCustomer.industry] as a second argument to the useEffect Hook.",["183"],"React Hook useEffect has missing dependencies: 'id', 'location.pathname', 'navigate', and 'setLoggedIn'. Either include them or remove the dependency array.",["184"],"'Header' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Menu' is defined but never used.","'Transition' is defined but never used.","'classNames' is defined but never used.","'EditEmployee' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'show' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'useContext' is defined but never used.","'baseUrl' is defined but never used.","'LoginContext' is defined but never used.","'useNavigate' is defined but never used.","'useState' is defined but never used.","'location' is assigned a value but never used.",["185"],{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [request]",{"range":"194","text":"195"},"Add dependencies array: [customer, tempCustomer.name, tempCustomer.industry]",{"range":"196","text":"197"},"Update the dependencies array to be: [id, location.pathname, navigate, setLoggedIn]",{"range":"198","text":"199"},"Update the dependencies array to be: [request, search]",{"range":"200","text":"201"},[919,921],"[request]",[1000,1000],", [customer, tempCustomer.name, tempCustomer.industry]",[2231,2233],"[id, location.pathname, navigate, setLoggedIn]",[826,834],"[request, search]"]